from tkinter import PhotoImage, Canvas, NW, Label
from pygame import mixer


def no_btc(frame, button2, entry):
    clear_widgets(frame, button2, entry)                # First, call clear_widgets to clear unnecessary widgets
    hampter(frame)                                      # Then, call hampter function


def clear_widgets(frame, button2, entry):
    for widget in frame.winfo_children():                   # Iterate through widgets
        if widget is not button2 and widget is not entry:   # Destroy them if they are neither button2 nor entry - those are still needed
            widget.destroy()


def hampter(frame):
    screen_width = frame.winfo_screenwidth()            # Get the screen width & height
    screen_height = frame.winfo_screenheight()

    label = Label(                                      # Create a new label
        frame,
        text="ε(´סּ︵סּ`)з Oh no, did you just lose your files? ヽ༼ຈʖ̯ຈ༽ﾉ",
        font=('Arial', int(screen_width/128), 'bold'),
        background='#020f12',
        foreground='GOLD'
    )
    label.place(relx=0.5, rely=0.98, anchor='center')   # Place the label

    image_path = "media/hampter.png"                    # Set up the path to the hampter image
    cute_hampter = PhotoImage(file=image_path)          # Create PhotoImage

                                                        # Create a Canvas widget to display the image
    canvas = Canvas(frame, width=cute_hampter.width(), height=cute_hampter.height(), bg='#020f12', highlightthickness=0)
    canvas.create_image(0, 0, anchor=NW, image=cute_hampter)
    canvas.pack()

    x = screen_width // 2                               # Initial position for the image
    y = screen_height // 2

    dx = 5                                              # Movement increment
    dy = 5

    audio_file = "media/hampter.mp3"                    # Path to the audio to be played
    mixer.init()
    mixer.music.load(audio_file)
    mixer.music.play()                                  # Play the audio

    def move_image():                                   # Function to move the image around
        nonlocal x, y, dx, dy
        x += dx                                         # Increment x-coordinate for the next movement
        y += dy                                         # Increment y-coordinate for the next movement

        if x <= 0 or x + cute_hampter.width() >= screen_width:      # Check if the image hits the horizontal borders
            dx = -dx                                                # Reverse the horizontal direction

        if y <= 0 or y + cute_hampter.height() >= (screen_height - screen_height / 10):     # Check if the image hits the vertical borders
            dy = -dy                                                # Reverse the vertical direction

        canvas.place(x=x, y=y)                          # Move the canvas widget
        frame.after(25, move_image)                     # Schedule the next movement after 25 milliseconds

    move_image()                                        # Start moving the image

    frame.update()                                      # Update the frame
