import os

from cryptography.fernet import Fernet

key: str                                # Global key variable to hold the encryption/decryption key


def encrypt():
    global key

    key = Fernet.generate_key()         # Generate a new key
    print(f"Key: {key.decode()}")

    filepath = "very_important_files/"  # Filepath - will only encrypt files in this directory
    files = os.listdir(filepath)        # Get files in this directory

    for filename in files:              # Iterate through files
        filename = filepath + filename  # Update filename to include the directory path as well

        fernet = Fernet(key)            # Using the generated key

        with open(filename, 'rb') as file:      # Read the file
            original = file.read()

        encrypted = fernet.encrypt(original)    # Encrypt the file

        with open(filename, 'wb') as encrypted_file:    # Rewrite the file with the encrypted data
            encrypted_file.write(encrypted)


def decrypt():
    global key
    key = key.decode()                  # Decode the key

    filepath = "very_important_files/"
    files = os.listdir(filepath)

    for filename in files:              # Iterate through files
        filename = filepath + filename

        fernet = Fernet(key)

        with open(filename, 'rb') as enc_file:      # Read the encrypted file
            encrypted = enc_file.read()

        decrypted = fernet.decrypt(encrypted)       # Decrypt it

        with open(filename, 'wb') as dec_file:      # Write the original file content back
            dec_file.write(decrypted)
